package errmsg

//首先需要定义一个err_code,错误处理机制就是根据拿到的状态码去查询一个字典，返回到前端对应的错误信息
const (
	SUCCESS = 200
	ERROR = 500

	// code=100XXX时表示用户模块的错误
	ERROR_USERNAME_USED = 1001
	ERRPR_PASSWORD_WRONG = 1002
	ERROR_USER_NOT_EXIST = 1003
	ERROR_TOKEN_EXIST = 1004
	ERROR_TOKEN_LONG_TIME = 1005
	ERROR_TOKEN_NOT_EXIST = 1006
	ERROR_TOKEN_TYPE_WRONG=1007
	ERROR_TOKEN_WRONG=1008
	// code=200XXX时表示文章模块错误
	ERROR_ARTI_NOT_EXIST=2001
	// code=300XXX时表示分类模块的错误
	ERROR_CATEGORY_USED=3001
	ERROR_CATEGORY_NOT_EXIST=3002
)
var CodeMsg = map[int]string{
	SUCCESS:"OK",
	ERROR :"FAIL",

	ERROR_USERNAME_USED:"用户名已存在",
	ERRPR_PASSWORD_WRONG:"密码错误",
	ERROR_USER_NOT_EXIST:"用户不存在",
	ERROR_TOKEN_EXIST:"TOKEN不存在",
	ERROR_TOKEN_LONG_TIME:"TOKEN已过期",
	ERROR_TOKEN_NOT_EXIST:"TOKEN不存在",
	ERROR_TOKEN_TYPE_WRONG:"TOKEN格式错误",
	ERROR_TOKEN_WRONG:"TOEKN错误",
	ERROR_CATEGORY_USED:"分类已存在",
	ERROR_CATEGORY_NOT_EXIST: "分类不存在",
	ERROR_ARTI_NOT_EXIST:"文章不存在",

}

func GetErrMsg(code int)string {
	return CodeMsg[code]
}